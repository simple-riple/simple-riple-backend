name: Deploy Dev Server

on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Gradle
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

#      # Docker
#      - name: Docker build and push
#        run: |
#          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ secrets.DOCKER_TAG_DEV }} .
#          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ secrets.DOCKER_TAG_DEV }}

#  setup-env:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Create .env file for docker-compose
#      - name: Create spring.env file

#  deploy:
#    runs-on: ubuntu-latest
#    steps:
#      # EC2로 쉘 스크립트 전송
#      - name: Send scripts to Oracle Cloud
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.ORACLE_INSTANCE_HOST }}
#          port: ${{ secrets.ORACLE_INSTANCE_PORT }}
#          username: ${{ secrets.ORACLE_INSTANCE_USERNAME }}
#          key: ${{ secrets.ORACLE_INSTANCE_PRIVATE_KEY }}
#          source: "./deploy/dev/*"
#          target: "/srv/deploy"
#          strip_components: 1
#
#      # EC2에서 docker-compose 실행
#      - name: Deploy to EC2
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.AWS_EC2_HOST }}
#          username: ${{ secrets.AWS_EC2_USERNAME }}
#          port: ${{ secrets.AWS_EC2_PORT }}
#          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
#          script: |
#            cd /srv/deploy/dev
#            bash deploy.sh \
#            ${{ secrets.DOCKER_USERNAME }} \
#            ${{ secrets.DOCKER_REPOSITORY }} \
#            ${{ secrets.DOCKER_TAG_DEV }}

  done:
    if: always()
    runs-on: ubuntu-latest
    steps:
      # 배포 결과 슬랙 전송
      - name: Send result to slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_URL_CICD }}
