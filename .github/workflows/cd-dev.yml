name: cd dev

on:
  push:
    branches: [ develop ]

jobs:
  cd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ secrets.DOCKER_TAG_DEV }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ secrets.DOCKER_TAG_DEV }}

      - name: Create '.env' file for docker-compose
        run: |
          cd ./deploy/dev
          echo '#!/bin/sh' >> .env
          echo 'DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}' >> .env
          echo 'DOCKER_REPOSITORY=${{ secrets.DOCKER_REPOSITORY }}' >> .env
          echo 'DOCKER_TAG_DEV=${{ secrets.DOCKER_TAG_DEV }}' >> .env

      - name: Send scripts to Oracle Cloud
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ORACLE_INSTANCE_HOST }}
          port: ${{ secrets.ORACLE_INSTANCE_PORT }}
          username: ${{ secrets.ORACLE_INSTANCE_USERNAME }}
          key: ${{ secrets.ORACLE_INSTANCE_PRIVATE_KEY }}
          source: "./deploy/dev/*"
          target: "/srv/deploy"
          strip_components: 1

      - name: Deploy to Oracle Cloud
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ORACLE_INSTANCE_HOST }}
          port: ${{ secrets.ORACLE_INSTANCE_PORT }}
          username: ${{ secrets.ORACLE_INSTANCE_USERNAME }}
          key: ${{ secrets.ORACLE_INSTANCE_PRIVATE_KEY }}
          script: |
            cd /srv/deploy/dev
            bash deploy.sh \
            ${{ secrets.DOCKER_USERNAME }} \
            ${{ secrets.DOCKER_REPOSITORY }} \
            ${{ secrets.DOCKER_TAG_DEV }}

      - name: Send result to slack
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_URL_CICD }}